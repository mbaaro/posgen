/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.posgen;

import java.awt.Event;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.time.DayOfWeek;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.time.*;
import java.sql.*;


/**
 *
 * @author admin
 */
public class StockAdjstments extends javax.swing.JFrame {
   Connection conn;
   PreparedStatement pst;
    ResultSet rst;
    ResultSetMetaData rsmd;
    String query;
    DefaultTableModel  dtm=new DefaultTableModel();
    int i,j;
    Float profitmargin,storeqty,shelf_qty,stock_bal,profitm,newstoreqty,newshelf_qty,newstock_bal,lotbalance,newlotbalance;
    /**
     * Creates new form StockAdjstments
     */
    public StockAdjstments() {
        initComponents();
        connect cn=new connect();
    conn=cn.connectdb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpanel_in = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtb_itemsin = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbo_categoryin = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cbo_itemin = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jtf_uomin = new javax.swing.JTextField();
        jtf_qtyin = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtf_bpin = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtf_spin = new javax.swing.JTextField();
        jtf_shelf_qtyin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtf_store_qty_in = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbo_supplierin = new javax.swing.JComboBox<>();
        chk_expires = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jta_notein = new javax.swing.JTextArea();
        btn_savein = new javax.swing.JButton();
        btn_clearin = new javax.swing.JButton();
        btn_closein = new javax.swing.JButton();
        dtp_expiryin = new com.github.lgooddatepicker.components.DatePicker();
        jLabel22 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jtf_lotnoin = new javax.swing.JTextField();
        jpanel_out = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        cbo_categoryout = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jtf_uomout = new javax.swing.JTextField();
        cbo_itemout = new javax.swing.JComboBox<>();
        jtf_balanceout = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jtf_expiryout = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jtf_qtyout = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtb_itemsout = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jta_noteout = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        cbo_lotout = new javax.swing.JComboBox<>();
        btn_save = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_close = new javax.swing.JButton();
        chk_expiredlots = new javax.swing.JCheckBox();
        jpanel_transfers = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        cbo_item_transfer = new javax.swing.JComboBox<>();
        jtf_transferqty = new javax.swing.JTextField();
        cbo_category_transfer = new javax.swing.JComboBox<>();
        jtf_uom_transfer = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        btn_transfer = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lbl_qty = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jSeparator1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtb_itemsin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtb_itemsin.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jtb_itemsin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtb_itemsinMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtb_itemsin);

        jLabel1.setText("Category");

        cbo_categoryin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbo_categoryinFocusLost(evt);
            }
        });
        cbo_categoryin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbo_categoryinMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cbo_categoryinMouseReleased(evt);
            }
        });

        jLabel2.setText("Item");

        cbo_itemin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbo_iteminFocusLost(evt);
            }
        });

        jLabel3.setText("UOM");

        jtf_uomin.setEditable(false);

        jtf_qtyin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_qtyinFocusLost(evt);
            }
        });
        jtf_qtyin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_qtyinKeyTyped(evt);
            }
        });

        jLabel4.setText("Qty in");

        jLabel5.setText("Buying Price");
        jLabel5.setToolTipText("Buying Price per indicated unit of measure");

        jtf_bpin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_bpinKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_bpinKeyTyped(evt);
            }
        });

        jLabel6.setText("Selling Price");
        jLabel6.setToolTipText("Selling Price per indicated unit of measure");

        jtf_shelf_qtyin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_shelf_qtyinKeyReleased(evt);
            }
        });

        jLabel7.setText("Shelf Qty");

        jtf_store_qty_in.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_store_qty_inKeyReleased(evt);
            }
        });

        jLabel8.setText("store Qty");

        jLabel9.setText("Supplier");

        chk_expires.setText("Expires ?");
        chk_expires.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chk_expiresMouseClicked(evt);
            }
        });

        jLabel10.setText("Make Note");

        jta_notein.setColumns(20);
        jta_notein.setRows(5);
        jScrollPane2.setViewportView(jta_notein);

        btn_savein.setText("SAVE");
        btn_savein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveinActionPerformed(evt);
            }
        });

        btn_clearin.setText("CLEAR");
        btn_clearin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearinActionPerformed(evt);
            }
        });

        btn_closein.setText("CLOSE");
        btn_closein.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_closeinActionPerformed(evt);
            }
        });

        dtp_expiryin.setEnabled(false);

        jLabel22.setText("Lot No");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jButton1.setText("Create Lot");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpanel_inLayout = new javax.swing.GroupLayout(jpanel_in);
        jpanel_in.setLayout(jpanel_inLayout);
        jpanel_inLayout.setHorizontalGroup(
            jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_inLayout.createSequentialGroup()
                .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel_inLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpanel_inLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jtf_qtyin))
                            .addGroup(jpanel_inLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jtf_bpin))
                            .addGroup(jpanel_inLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jtf_spin))
                            .addGroup(jpanel_inLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jtf_shelf_qtyin))
                            .addGroup(jpanel_inLayout.createSequentialGroup()
                                .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                                .addGap(10, 10, 10)
                                .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtf_store_qty_in)
                                    .addComponent(cbo_supplierin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane2)
                            .addGroup(jpanel_inLayout.createSequentialGroup()
                                .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jpanel_inLayout.createSequentialGroup()
                                        .addComponent(chk_expires, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addComponent(dtp_expiryin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jpanel_inLayout.createSequentialGroup()
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cbo_categoryin, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jpanel_inLayout.createSequentialGroup()
                                            .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_inLayout.createSequentialGroup()
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                                .addGroup(jpanel_inLayout.createSequentialGroup()
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(10, 10, 10)))
                                            .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(cbo_itemin, 0, 165, Short.MAX_VALUE)
                                                .addComponent(jtf_uomin))))
                                    .addGroup(jpanel_inLayout.createSequentialGroup()
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(jtf_lotnoin)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1)
                                        .addGap(4, 4, 4)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jpanel_inLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpanel_inLayout.createSequentialGroup()
                        .addComponent(btn_savein, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btn_clearin, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btn_closein, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(173, 173, 173))
        );
        jpanel_inLayout.setVerticalGroup(
            jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_inLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel_inLayout.createSequentialGroup()
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbo_categoryin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbo_itemin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(19, 19, 19)
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtf_uomin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtf_qtyin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jtf_bpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jtf_spin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jtf_shelf_qtyin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jtf_store_qty_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cbo_supplierin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpanel_inLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(jButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_inLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtf_lotnoin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chk_expires)
                            .addComponent(dtp_expiryin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanel_inLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(jpanel_inLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addGroup(jpanel_inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn_savein)
                                    .addComponent(btn_clearin)
                                    .addComponent(btn_closein))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Adjustments In", jpanel_in);

        jLabel11.setText("Category");

        cbo_categoryout.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbo_categoryoutFocusLost(evt);
            }
        });

        jLabel12.setText("Item");

        jLabel13.setText("UOM");

        jLabel14.setText("Lot");

        jtf_uomout.setEditable(false);

        cbo_itemout.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbo_itemoutFocusLost(evt);
            }
        });

        jtf_balanceout.setEditable(false);

        jLabel15.setText("Lot Balance");

        jLabel16.setText("lot expiry");

        jtf_expiryout.setEditable(false);

        jLabel18.setText("Qty Out");

        jtf_qtyout.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtf_qtyoutKeyTyped(evt);
            }
        });

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtb_itemsout.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtb_itemsout.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jtb_itemsout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtb_itemsoutMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtb_itemsout);

        jta_noteout.setColumns(20);
        jta_noteout.setRows(5);
        jScrollPane4.setViewportView(jta_noteout);

        jLabel20.setText("Make Note");

        cbo_lotout.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbo_lotoutFocusLost(evt);
            }
        });

        btn_save.setText("SAVE");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_clear.setText("CLEAR");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_close.setText("CLOSE");
        btn_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_closeActionPerformed(evt);
            }
        });

        chk_expiredlots.setText("See Expired lots");
        chk_expiredlots.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chk_expiredlotsItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jpanel_outLayout = new javax.swing.GroupLayout(jpanel_out);
        jpanel_out.setLayout(jpanel_outLayout);
        jpanel_outLayout.setHorizontalGroup(
            jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_outLayout.createSequentialGroup()
                .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpanel_outLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpanel_outLayout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtf_qtyout))
                            .addGroup(jpanel_outLayout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbo_lotout, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpanel_outLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(chk_expiredlots, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpanel_outLayout.createSequentialGroup()
                                .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtf_balanceout)
                                    .addComponent(jtf_expiryout)))))
                    .addGroup(jpanel_outLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel20)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpanel_outLayout.createSequentialGroup()
                        .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(btn_close, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpanel_outLayout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jpanel_outLayout.createSequentialGroup()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbo_categoryout, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpanel_outLayout.createSequentialGroup()
                            .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_outLayout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                .addGroup(jpanel_outLayout.createSequentialGroup()
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10)))
                            .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbo_itemout, 0, 165, Short.MAX_VALUE)
                                .addComponent(jtf_uomout))))
                    .addContainerGap(517, Short.MAX_VALUE)))
        );
        jpanel_outLayout.setVerticalGroup(
            jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_outLayout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jpanel_outLayout.createSequentialGroup()
                .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel_outLayout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(chk_expiredlots)
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(cbo_lotout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jtf_balanceout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jtf_expiryout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jtf_qtyout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20)
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanel_outLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_save)
                            .addComponent(btn_clear)
                            .addComponent(btn_close))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpanel_outLayout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbo_categoryout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addGap(18, 18, 18)
                    .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbo_itemout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addGap(19, 19, 19)
                    .addGroup(jpanel_outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(jtf_uomout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(394, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Adjustments Out", jpanel_out);

        jInternalFrame1.setVisible(true);

        jtf_uom_transfer.setEditable(false);

        jLabel24.setText("To");

        jLabel21.setText("UOM");

        jLabel19.setText("Item");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Shelf", "Store" }));

        btn_transfer.setText("Transfer");

        btn_exit.setText("Exit");
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Store", "Shelf" }));

        jLabel23.setText("From");

        jLabel17.setText("Category");

        lbl_qty.setText("Qty");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbo_category_transfer, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lbl_qty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbo_item_transfer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtf_uom_transfer)
                            .addComponent(jtf_transferqty)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(101, 101, 101)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_transfer, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbo_category_transfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbo_item_transfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_transfer))
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jtf_uom_transfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jtf_transferqty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(btn_exit)))
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_qty)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)
                        .addGap(10, 10, 10)))
                .addContainerGap(171, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpanel_transfersLayout = new javax.swing.GroupLayout(jpanel_transfers);
        jpanel_transfers.setLayout(jpanel_transfersLayout);
        jpanel_transfersLayout.setHorizontalGroup(
            jpanel_transfersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_transfersLayout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jpanel_transfersLayout.setVerticalGroup(
            jpanel_transfersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel_transfersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(327, 327, 327))
        );

        jTabbedPane1.addTab("Inter location Mvmnt", jpanel_transfers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_exitActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    //pull initial data when the window is opened
    populatecategories();
       getsuppliers();
    DataProvider dtp=new DataProvider();
     rst=dtp.allstockitems();
     //populate table at in adjustments
     populatetablein(rst);
      //populate table at out adjustments
     populatetableout(rst);
    }//GEN-LAST:event_formWindowOpened

    private void cbo_categoryinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbo_categoryinFocusLost
        // when one makes a selection
        //only populate the items dropdown with items from selected category
        populateitemscomboin();
        //now filter the table
        if("All Categories".equals(cbo_categoryin.getSelectedItem().toString())){
        DataProvider dtp=new DataProvider();
        rst=dtp.allstockitems();
        populatetablein(rst);
        }else{
          filterstocksin();
        }
    }//GEN-LAST:event_cbo_categoryinFocusLost

    private void cbo_categoryoutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbo_categoryoutFocusLost
        // category selection has been made        
         populateitemscomboout();
        //now filter the table
        if("All Categories".equals(cbo_categoryout.getSelectedItem().toString())){
         DataProvider dtp=new DataProvider();
        rst=dtp.allstockitems();
        populatetableout(rst);
        }else{
          filterstocksout();
        }
        
       
                        
    }//GEN-LAST:event_cbo_categoryoutFocusLost

    private void cbo_iteminFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbo_iteminFocusLost
        // lets get details of the selected item
        DataProvider dtp=new DataProvider();
        rst=dtp.getitemdetails(cbo_itemin.getSelectedItem().toString());
        try{
           while(rst.next()){
               jtf_uomin.setText(rst.getString("unit_measure"));
             storeqty=rst.getFloat("store_qty");
              shelf_qty=rst.getFloat("shelf_qty");
              stock_bal=rst.getFloat("stock_balance");
              profitm=rst.getFloat("profit%");
           } 
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(rootPane, "Error: "+ex);
        }
    }//GEN-LAST:event_cbo_iteminFocusLost

    private void cbo_itemoutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbo_itemoutFocusLost
      // lets get details of the selected item
        DataProvider dtp=new DataProvider();
        try{
            rst=dtp.getitemdetails(cbo_itemout.getSelectedItem().toString());
            while(rst.next()){
          jtf_uomout.setText(rst.getString("unit_measure"));
         storeqty=rst.getFloat("store_qty");
         shelf_qty=rst.getFloat("shelf_qty");
         stock_bal=rst.getFloat("stock_balance");
           }
//now get the lots
           rst=dtp.getitemlots(cbo_itemout.getSelectedItem().toString()); 
           cbo_lotout.removeAllItems();
           while(rst.next()){
           cbo_lotout.addItem(rst.getString("lotid"));
           }
             
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(rootPane, "Error: "+ex);
        }
       
       
        
    }//GEN-LAST:event_cbo_itemoutFocusLost

    private void jtf_qtyinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_qtyinKeyTyped
        // when someone enters the qty lets calculate new qties
    }//GEN-LAST:event_jtf_qtyinKeyTyped

    private void jtf_qtyinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_qtyinFocusLost
        //one has  finished entering the qty lets calculate the balances
        jtf_shelf_qtyin.setText(jtf_qtyin.getText());
        jtf_store_qty_in.setText("0");
        
        
        
    }//GEN-LAST:event_jtf_qtyinFocusLost

    private void jtf_bpinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_bpinKeyTyped
    
    }//GEN-LAST:event_jtf_bpinKeyTyped

    private void jtf_shelf_qtyinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_shelf_qtyinKeyReleased
        //balance between tottal qty, shelf and store qty
        Double allqty=Double.valueOf(jtf_qtyin.getText());
        Double shelfqty=Double.valueOf(jtf_shelf_qtyin.getText());
        Double storeqty=Double.valueOf(jtf_store_qty_in.getText());
        if(allqty>0 && shelfqty<allqty){
            jtf_store_qty_in.setText(String.valueOf(allqty-shelfqty));
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "Please make sure the shelf quantity is not more than the total adjustment Qty");
        jtf_shelf_qtyin.setText("");
        }
        
    }//GEN-LAST:event_jtf_shelf_qtyinKeyReleased

    private void jtf_store_qty_inKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_store_qty_inKeyReleased
 //balance between tottal qty, shelf and store qty
        Double allqty=Double.valueOf(jtf_qtyin.getText());
        Double shelfqty=Double.valueOf(jtf_shelf_qtyin.getText());
        Double storeqty=Double.valueOf(jtf_store_qty_in.getText());
        if(allqty>0 && shelfqty<allqty){
            jtf_shelf_qtyin.setText(String.valueOf(allqty-storeqty));
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "Please make sure the Store quantity is not more than the total adjustment Qty");
        jtf_store_qty_in.setText("");
        }
    }//GEN-LAST:event_jtf_store_qty_inKeyReleased

    private void jtf_bpinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_bpinKeyReleased
         // lets calculate the sp based on the items set profit margin
    Double sp=0.0;
    sp=Double.valueOf(Math.round((Double.valueOf(jtf_bpin.getText())*(profitm/100))+Double.valueOf(jtf_bpin.getText())));
        jtf_spin.setText(sp.toString());
    Math.round((Double.valueOf(jtf_bpin.getText())*(profitm/100))+Double.valueOf(jtf_bpin.getText()));
    }//GEN-LAST:event_jtf_bpinKeyReleased

    private void jtb_itemsinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtb_itemsinMouseClicked
        // get details on the selected row
        int row=jtb_itemsin.getSelectedRow();
        cbo_categoryin.setSelectedItem(jtb_itemsin.getModel().getValueAt(row, 1).toString());
        cbo_itemin.setSelectedItem(jtb_itemsin.getModel().getValueAt(row, 2).toString());
         jtf_uomin.setText(jtb_itemsin.getModel().getValueAt(row, 3).toString());
         storeqty=Float.valueOf(jtb_itemsin.getModel().getValueAt(row, 4).toString());
         shelf_qty=Float.valueOf(jtb_itemsin.getModel().getValueAt(row, 5).toString());
         stock_bal=Float.valueOf(jtb_itemsin.getModel().getValueAt(row, 6).toString());
        profitm=Float.valueOf(jtb_itemsin.getModel().getValueAt(row, 8).toString());;
        
    }//GEN-LAST:event_jtb_itemsinMouseClicked

    private void jtb_itemsoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtb_itemsoutMouseClicked
      int row=jtb_itemsout.getSelectedRow();
        cbo_categoryout.setSelectedItem(jtb_itemsout.getModel().getValueAt(row, 1).toString());
        cbo_itemout.setSelectedItem(jtb_itemsout.getModel().getValueAt(row, 2).toString());
         jtf_uomout.setText(jtb_itemsout.getModel().getValueAt(row, 3).toString());
         storeqty=Float.valueOf(jtb_itemsout.getModel().getValueAt(row, 4).toString());
         shelf_qty=Float.valueOf(jtb_itemsout.getModel().getValueAt(row, 5).toString());
         stock_bal=Float.valueOf(jtb_itemsout.getModel().getValueAt(row, 6).toString());
        
    }//GEN-LAST:event_jtb_itemsoutMouseClicked

    private void cbo_categoryinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbo_categoryinMouseClicked
        // TODO add your handling code here:
       //  JOptionPane.showMessageDialog(rootPane, "mouse clicked");
    }//GEN-LAST:event_cbo_categoryinMouseClicked

    private void cbo_categoryinMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbo_categoryinMouseReleased
        // TODO add your handling code here:
        //only populate the items dropdown with items from selected category
       // JOptionPane.showMessageDialog(rootPane, "mouse released");
        populateitemscomboin();
        //now filter the table
        if("All Categories".equals(cbo_categoryin.getSelectedItem().toString())){
        DataProvider dtp=new DataProvider();
        rst=dtp.allstockitems();
        populatetablein(rst);
        }else{
          filterstocksin();
        }
    }//GEN-LAST:event_cbo_categoryinMouseReleased

    private void chk_expiredlotsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chk_expiredlotsItemStateChanged
        // lets toggle between expired and unexpired lots
        DataProvider dtp =new DataProvider();
        if(chk_expiredlots.isSelected()==true){
            rst=dtp.getexpiredlots(cbo_lotout.getSelectedItem().toString());
        }else{
           rst=dtp.getitemlots(cbo_lotout.getSelectedItem().toString()); 
        }
        cbo_lotout.removeAllItems();
       try{
        while (rst.next()){
          cbo_lotout.addItem(rst.getString("lotid"));
        }
       }
       catch(SQLException ex){
        JOptionPane.showMessageDialog(rootPane, "Error: "+ex);
    }
    }//GEN-LAST:event_chk_expiredlotsItemStateChanged

    private void cbo_lotoutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbo_lotoutFocusLost
        // TODO add your handling code here:
        DataProvider dtp=new DataProvider();
        dtp.getlotdetails(cbo_itemout.getSelectedItem().toString(),cbo_categoryout.getSelectedItem().toString(), cbo_lotout.getSelectedItem().toString());
        try{
         while(rst.next()){
         jtf_expiryout.setText(rst.getString("lotexpiry"));
         jtf_balanceout.setText(rst.getString("qty"));
         lotbalance=Float.valueOf(rst.getString("qty"));
         }   
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, "Error: "+ex);
        }
    }//GEN-LAST:event_cbo_lotoutFocusLost

    private void jtf_qtyoutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_qtyoutKeyTyped
        // get the lot balance
      newlotbalance=lotbalance-Float.valueOf(jtf_qtyout.getText());
      jtf_balanceout.setText(newlotbalance.toString());
    }//GEN-LAST:event_jtf_qtyoutKeyTyped

    private void chk_expiresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chk_expiresMouseClicked
        // TODO add your handling code here:
        if(chk_expires.isSelected()==true){
            dtp_expiryin.setEnabled(true);
        }else{
            dtp_expiryin.setEnabled(false);
        }
    }//GEN-LAST:event_chk_expiresMouseClicked

    private void btn_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_closeActionPerformed
        //confirm if the user really wants to exit
       int confirm=JOptionPane.showConfirmDialog(rootPane, "Do you really wish to close and exit?");
       if(confirm==1){
           this.setVisible(false);
       }
    }//GEN-LAST:event_btn_closeActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // clear fields
        jta_notein.setText("");
        jtf_bpin.setText("");
       // jtf_qtyin.setText("");
        jtf_shelf_qtyin.setText("");
        jtf_spin.setText("");
        jtf_store_qty_in.setText("");
        jtf_uomin.setText("");
        cbo_categoryin.setSelectedIndex(0);
        cbo_itemin.setSelectedIndex(0);
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
       
        
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_clearinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearinActionPerformed
      // clear fields
        jta_notein.setText("");
        jtf_bpin.setText("");
      //  jtf_qtyin.setText("");
        jtf_shelf_qtyin.setText("");
        jtf_spin.setText("");
        jtf_store_qty_in.setText("");
        jtf_uomin.setText("");
        cbo_categoryin.setSelectedIndex(0);
        cbo_itemin.setSelectedIndex(0);
    }//GEN-LAST:event_btn_clearinActionPerformed

    private void btn_saveinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveinActionPerformed
       
       int itemid,lotcount=0;
       //makesure the  required fields have been filled
        // TODO add your handling code here:
        //storeqty,shelf_qty,stock_bal
        //get balances
        newstoreqty=storeqty+Float.valueOf(jtf_store_qty_in.getText());
        newshelf_qty=shelf_qty+Float.valueOf(jtf_shelf_qtyin.getText());
        newstock_bal=stock_bal+Float.valueOf(jtf_qtyin.getText());
        //change stock quantities
       // check if the lot exists for the item
       query="select count(lotid) as count,item from itemlots where lotid='"+jtf_lotnoin.getText()+"' and item=(select id from products where product_name='"+cbo_itemin.getSelectedItem().toString()+"')";
       try{ 
       pst=conn.prepareStatement(query);
        rst=pst.executeQuery();
        while(rst.next()){
            lotcount=rst.getInt("count");
            lotcount=rst.getInt("item");
        }
       //if count is zero insert new record, otherwisem update
       if(lotcount==0){
       //insert new record
       query="";
       
       }else{
           //update existing
           query="";
           
       }
       pst=conn.prepareStatement(query);
       pst.execute();
       //update the item quantity in inventory
       query="";
       pst=conn.prepareStatement(query);
       pst.execute();
//update transaction
query="";
       pst=conn.prepareStatement(query);
       pst.execute();
        //update cashbook
        query="";
       pst=conn.prepareStatement(query);
       pst.execute();
        //clear fields
        
        }
        catch(SQLException ex){
                 JOptionPane.showMessageDialog(rootPane, "Error retrieving previous lot details: "+ex  );
                }
    }//GEN-LAST:event_btn_saveinActionPerformed

    private void btn_closeinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_closeinActionPerformed
        // TODO add your handling code here:
          //confirm if the user really wants to exit
       int confirm=JOptionPane.showConfirmDialog(rootPane, "Do you really wish to close and exit?");
       if(confirm==1){
           this.setVisible(false);
       }
    }//GEN-LAST:event_btn_closeinActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // lets create a lot in the format -date,lotcount
        LocalDate curdate= LocalDate.now();
        int day=curdate.getDayOfMonth();
        int month=curdate.getMonthValue();
        int year=curdate.getYear();
        int maxlot=0;
        String lotno="";
        //get max count of lots 
        try{
        query="select count(lotid) as lotcount from itemlots";
        pst=conn.prepareStatement(query);
        rst=pst.executeQuery();
        while(rst.next()){
           maxlot=rst.getInt("lotcount");
        }
        
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(rootPane, "Error creating a lot number: "+ex);
        }
        lotno=day+"_"+month+"_"+year+"_"+maxlot;
        
        jtf_lotnoin.setText(lotno);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockAdjstments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockAdjstments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockAdjstments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockAdjstments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockAdjstments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_clearin;
    private javax.swing.JButton btn_close;
    private javax.swing.JButton btn_closein;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_savein;
    private javax.swing.JButton btn_transfer;
    private javax.swing.JComboBox<String> cbo_category_transfer;
    private javax.swing.JComboBox<String> cbo_categoryin;
    private javax.swing.JComboBox<String> cbo_categoryout;
    private javax.swing.JComboBox<String> cbo_item_transfer;
    private javax.swing.JComboBox<String> cbo_itemin;
    private javax.swing.JComboBox<String> cbo_itemout;
    private javax.swing.JComboBox<String> cbo_lotout;
    private javax.swing.JComboBox<String> cbo_supplierin;
    private javax.swing.JCheckBox chk_expiredlots;
    private javax.swing.JCheckBox chk_expires;
    private com.github.lgooddatepicker.components.DatePicker dtp_expiryin;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel jpanel_in;
    private javax.swing.JPanel jpanel_out;
    private javax.swing.JPanel jpanel_transfers;
    private javax.swing.JTextArea jta_notein;
    private javax.swing.JTextArea jta_noteout;
    private javax.swing.JTable jtb_itemsin;
    private javax.swing.JTable jtb_itemsout;
    private javax.swing.JTextField jtf_balanceout;
    private javax.swing.JTextField jtf_bpin;
    private javax.swing.JTextField jtf_expiryout;
    private javax.swing.JTextField jtf_lotnoin;
    private javax.swing.JTextField jtf_qtyin;
    private javax.swing.JTextField jtf_qtyout;
    private javax.swing.JTextField jtf_shelf_qtyin;
    private javax.swing.JTextField jtf_spin;
    private javax.swing.JTextField jtf_store_qty_in;
    private javax.swing.JTextField jtf_transferqty;
    private javax.swing.JTextField jtf_uom_transfer;
    private javax.swing.JTextField jtf_uomin;
    private javax.swing.JTextField jtf_uomout;
    private javax.swing.JLabel lbl_qty;
    // End of variables declaration//GEN-END:variables
public void populatecategories(){
    DataProvider dtp=new DataProvider();
    rst=dtp.getitemcategories();
    cbo_categoryin.removeAllItems();
    cbo_categoryout.removeAllItems();
    //add a default item to help in removing filter
     cbo_categoryin.addItem("All Categories");
        cbo_categoryout.addItem("All Categories");
        try{
     while (rst.next()){
        cbo_categoryin.addItem(rst.getString("category"));
        cbo_categoryout.addItem(rst.getString("category"));
    }   
    }
    catch(SQLException ex){
        JOptionPane.showMessageDialog(rootPane,"Error; "+ex);
    }
    
}
                  
public void filterstocksin(){
    //filter the in table contents to match the selected
 DataProvider dtp=new DataProvider();
    rst=dtp.stockitems(cbo_categoryin.getSelectedItem().toString());
    populatetablein(rst);   
}
                    public void filterstocksout(){
                         //filter the out table contents to match the selected
                     DataProvider dtp=new DataProvider();
                        rst=dtp.stockitems(cbo_categoryout.getSelectedItem().toString());
                        populatetableout(rst);      
                    }
public void getsuppliers(){
  DataProvider dtp=new DataProvider();
    rst=dtp.getsuppliers();
    cbo_supplierin.removeAllItems();
    try{
     while (rst.next()){
       cbo_supplierin.addItem(rst.getString("Name"));
    }   
    }
    catch(SQLException ex){
        JOptionPane.showMessageDialog(rootPane,"Error; "+ex);
    }   
}
                public void getactivelots(){
                   DataProvider dtp=new DataProvider();
                    rst=dtp.getitemlots(cbo_itemout.getSelectedItem().toString());
                    cbo_lotout.removeAllItems();
                    try{
                     while (rst.next()){
                       cbo_lotout.addItem(rst.getString("lotid"));
                    }   
                    }
                    catch(SQLException ex){
                        JOptionPane.showMessageDialog(rootPane,"Error; "+ex);
                    }  
                }
public void getexpiredlots(){
 DataProvider dtp=new DataProvider();
    rst=dtp.getexpiredlots(cbo_itemout.getSelectedItem().toString());
    cbo_lotout.removeAllItems();
    try{
     while (rst.next()){
      cbo_lotout.addItem(rst.getString("lotid"));   
    }   
    }
    catch(SQLException ex){
        JOptionPane.showMessageDialog(rootPane,"Error; "+ex);
    }    
}

                    
                    
  public void populateitemscomboin(){
      //lets populate the items dropdown with the selected category
      DataProvider dtp=new DataProvider();
      rst=dtp.stockitems(cbo_categoryin.getSelectedItem().toString());
      cbo_itemin.removeAllItems();
      try{
         while(rst.next()){
         cbo_itemin.addItem(rst.getString("product_name"));
         } 
      }
      catch(SQLException ex){
          
      }
  } 
                public void populateitemscomboout(){
                  //lets populate the items dropdown with the selected category
                  DataProvider dtp=new DataProvider();
                  rst=dtp.stockitems(cbo_categoryout.getSelectedItem().toString());
                  cbo_itemout.removeAllItems();
                  try{
                     while(rst.next()){
                     cbo_itemout.addItem(rst.getString("product_name"));
                     } 
                  }
                  catch(SQLException ex){

                  }
              }
public void populatetablein(ResultSet rst1){
                        // we will use this to populate the different tables at a go
                       DefaultTableModel model = (DefaultTableModel) jtb_itemsin.getModel();
                    model.setRowCount(0);
                        try {
                        rsmd=rst1.getMetaData();
                        int columns=rsmd.getColumnCount();
                        Vector column_names=new Vector();
                        Vector row_data=new Vector();
                        for(i=1; i<=columns;i++){
                        column_names.addElement(rsmd.getColumnName(i));
                        }
                        dtm.setColumnIdentifiers(column_names);
                        while(rst1.next()){
                         row_data=new Vector();
                         for(j=1;j<=columns;j++){
                         row_data.addElement(rst1.getString(j));
                        }
                         dtm.addRow(row_data);
                        }
                         jtb_itemsin.setModel(dtm);

                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(rootPane, ex);
                        }finally{
                            try {
                          //pst.close();
                          //rst.close();

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(rootPane, e);
                            }
                        }


                    }
public void populatetableout(ResultSet rst1){
                        // we will use this to populate the different tables at a go
                     DefaultTableModel model = (DefaultTableModel) jtb_itemsout.getModel();
                    model.setRowCount(0);
                        try {
                        rsmd=rst1.getMetaData();
                        int columns=rsmd.getColumnCount();
                        Vector column_names=new Vector();
                        Vector row_data=new Vector();
                        for(i=1; i<=columns;i++){
                        column_names.addElement(rsmd.getColumnName(i));
                        }
                        dtm.setColumnIdentifiers(column_names);
                        while(rst1.next()){
                         row_data=new Vector();
                         for(j=1;j<=columns;j++){
                         row_data.addElement(rst1.getString(j));
                        }
                         dtm.addRow(row_data);
                        }
                        jtb_itemsout.setModel(dtm);

                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(rootPane, ex);
                        }finally{
                            try {
                          //pst.close();
                          //rst.close();

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(rootPane, e);
                            }
                        }


                    }
}
